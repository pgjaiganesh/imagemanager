AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Resources:

  # IMAGEBUCKET:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub "ganeshji-${AWS::Region}${AWS::AccountId}"
  #     AccessControl: PublicRead
  #     WebsiteConfiguration:
  #       IndexDocument: index.html

  SourceBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      NotificationConfiguration:
        LambdaConfigurations:
          -
            Function: arn:aws:lambda:ap-south-1:444603092185:function:test-ap-south-1444603092185-ViewerRequestFunction
            Event: "s3:ObjectCreated:*"
            Filter:
              S3Key:
                Rules:
                  -
                    Name: suffix
                    Value: txt

#   ImageBucketPolicy:
#     Type: AWS::S3::BucketPolicy
#     Properties:
#       Bucket: !Ref IMAGEBUCKET
#       PolicyDocument:
#         Statement:
#               Action:
#                 - s3:GetObject
#               Effect: Allow
#               Principal: !GetAtt EdgeLambdaRole.Arn
#               Resource: !Sub arn:aws:s3:::${IMAGEBUCKET}/*
#
#   EdgeLambdaRole:
#     Type: "AWS::IAM::Role"
#     Properties:
#       AssumeRolePolicyDocument:
#         Version: "2012-10-17"
#         Statement:
#             Effect: "Allow"
#             Principal:
#               Service:
#                 - "lambda.amazonaws.com"
#                 - "edgelambda.amazonaws.com"
#             Action:
#               - "sts:AssumeRole"
#       ManagedPolicyArns:
#         - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
#
Outputs:
#   BucketWebsiteUrl:
#     Value: !GetAtt IMAGEBUCKET.WebsiteURL
#     Export:
#       Name: !Sub "${AWS::StackName}-BucketWebsiteUrl"

  ImageBucket:
    Value: !Ref SourceBucket
    Export:
      Name: !Sub "${AWS::StackName}-SourceBucket"

  # RoleArn:
  #   Value: !GetAtt EdgeLambdaRole.Arn
