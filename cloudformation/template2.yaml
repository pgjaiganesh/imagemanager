AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31

Parameters:
  ImageBucket:
    Type: String
    Description: Enter S3 bucket name created from template 1.

Resources:
  EdgeLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/service-role/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  ViewerRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ganeshji-codedeployus/viewer-request-function.zip
      Handler: index.handler
      Runtime: nodejs6.10
      MemorySize: 128
      Timeout: 1
      Role: !GetAtt EdgeLambdaRole.Arn

  ViewerRequestFunctionVersion:
    Type: "AWS::Lambda::Version"
    Properties:
      FunctionName: !Ref ViewerRequestFunction
      Description: "A version of ViewerRequestFunction"

  OriginRequestFunction:
   Type: AWS::Serverless::Function
   Properties:
     CodeUri: s3://ganeshji-codedeployus/origin-request-function.zip
     Handler: index.handler
     Runtime: nodejs6.10
     MemorySize: 512
     Timeout: 5
     Role: !GetAtt EdgeLambdaRole.Arn
     Policies:
         Statement:
             Action:
               - s3:GetObject
               - s3:PutObject
             Resource: !Sub arn:aws:s3:::${ImageBucket}/*
             Effect: Allow

  OriginRequestFunctionVersion:
    Type: "AWS::Lambda::Version"
    Properties:
      FunctionName: !Ref OriginRequestFunction
      Description: "A version of OriginRequestFunction"

Outputs:
  OriginRequestFunctionArn:
    Value: !GetAtt OriginRequestFunction.Arn
  ViewerRequestFunctionArn:
    Value: !GetAtt ViewerRequestFunction.Arn
